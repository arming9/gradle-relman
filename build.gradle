version = '0.1'

apply plugin: 'java'
apply plugin: 'eclipse'

dependencies {
	compile gradleApi()
}

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

jar {
 	from('.') {
    	include "license.txt"
    	into 'META-INF'
  	}
  	manifest {
        attributes("Implementation-Title": project.name,
                   "Implementation-Version": version
        )
    }
}

eclipse.classpath.downloadSources = true

// this is a workaround from http://forums.gradle.org/gradle/topics/eclipse_plugin_doesnt_attach_source_for_the_gradleapi_dependency

import org.gradle.plugins.ide.eclipse.model.*
eclipse {
    classpath {
        file {
            whenMerged {Classpath cp ->
                String gradleHome = gradle.getGradleHomeDir().absolutePath.replace(File.separator, '/')
                String gradleSrc = "${gradleHome}/src"
                cp.entries.each {ClasspathEntry entry ->
                    if ((entry in AbstractLibrary) && (entry.library.file.name.startsWith('gradle-'))) {
                        entry.sourcePath = new org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory().fromPath(gradleSrc)
                    }
                }
            }
        }
    }
}
// end workaround

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task prepareRelease(description: 'Writes the correct file path to the .travis.yml'){
	def filepath = jar.archivePath.absolutePath.substring(projectDir.absolutePath.length()+1)
	def travisFile = new File('.travis.yml');
	def newTravisFile = new File('.travis.yml_new');
	def travisFileContent = travisFile.getText('UTF-8')

	newTravisFile.withWriter { w ->
		travisFile.eachLine { line ->
			if(line.startsWith('  file: ')){
				w << '  file: '+filepath+'\n'
			} else {
				w << line + '\n'
			}
		}
	}
	
	travisFile.delete();
	newTravisFile.renameTo(travisFile);
}